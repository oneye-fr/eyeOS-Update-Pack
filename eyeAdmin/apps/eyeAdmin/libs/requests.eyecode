<?php
/*
		eyeAdmin 0.9
			04.08.2007
	--------------------------------------------------
		Made for eyeOS project
			Webbased Operating System (WebOS)
				www.eyeos.org | www.eyeos.info
	--------------------------------------------------
		Jonas Bueth (de)		bueth			jonas.bueth@eyeos.org
		Geoffrey Chery (fr)	HarimaKenji	chibi.harima@gmail.com
		Lars Knickrehm (de)	lars-sh		lars-sh@eye-os.de
		Ville Perkkio (fi)		vilu
	--------------------------------------------------
		Need help? Contact us or the eyeOS community!
			http://forums.eyeos.org/
	--------------------------------------------------
		eyeAdmin is released under the GNU Generla Public License (GPL)
			provided with each relese in the license.txt
			or at www.gnu.org/licenses/gpl.txt
	--------------------------------------------------
		To help continued development please consider making a donation
			at www.eyeos.org/donations
*/

/*
Description: Refreshes a table and label for registration requests
Arguments: Table to be refreshed
 - and label to be refreshed
Return: Nothing
Last updated: 05.08.2007
*/
function eyeAdmin_requests_refresh($table, $label) {
	if(!empty($table)) {
// Get requests part begins
// Get directorys of accounts
		$myPath = EYE_ROOT.'/'.APP_DIR.'/'.APP_CONF_SHARE.'/newusers/';
		$counter = 0;
// Get xml files in dir
		$xmlFiles = glob($myPath.'*.xml');
		if($xmlFiles && count($xmlFiles) > 0) {
			foreach($xmlFiles as $xmlFile) {
				$size = service('vfs', 'real_filesize', array($xmlFile));
				$fp = '';
				$myContent = '';
				if ($size > 0) {
// Read XML file
					$fp = service('vfs', 'real_open', array($xmlFile, 'r'));
					$myContent = fread($fp, $size);
					fclose($fp);
// Get Array
					$myFileContent = reqLib('eyeXML', 'xml2array', array($myContent));
					if(!empty($myFileContent['RegInformation'][0]['RegRealname'][0])) {
						$users[$counter] = array(
							'RegRealname' => $myFileContent['RegInformation'][0]['RegRealname'][0],
							'RegUsername' => $myFileContent['RegInformation'][0]['RegUsername'][0],
							'RegPassword' => $myFileContent['RegInformation'][0]['RegPassword'][0],
							'RegEmail' => $myFileContent['RegInformation'][0]['RegEmail'][0],
							'RegDate' => $myFileContent['RegInformation'][0]['RegDate'][0],
// Information get automaticly
							'RegIP' => $myFileContent['RegInformation'][0]['RegIP'][0],
// for security reasons
							'RegHostname' => $myFileContent['RegInformation'][0]['RegHostname'][0],
							'RegBrowser' => $myFileContent['RegInformation'][0]['RegBrowser'][0],
							'RegParameters' => $myFileContent['RegInformation'][0]['RegParameters'][0]
						);
						$counter++;
					}
				}
			}
		}
		// return $users;
// This is used if code above was a function
// Get requests part ends
		// $users = eyeAdmin_getUser();
		$counter = 0;
		foreach($users as $user) {
// the table needs at least a whitespace
			if(empty($user['RegParameters'])) $user['RegParameters'] = ' ';
			if(empty($user['RegRealname'])) $user['RegRealname'] = ' ';
			// array('Realname', 'Username', 'Email', 'CreateDate', 'Parameters');
			$table->delRow($user['RegUsername']);
			$table->addRow(array(
				$user['RegUsername'],
				$user['RegRealname'],
				$user['RegEmail'],
				date('d.m.y, g:i a', $user['createDate']),
				$user['RegParameters']
			));
			$counter++;
		}
		if(!empty($label)) $label->setText($counter.' new registration requests.');
	}
}
?>